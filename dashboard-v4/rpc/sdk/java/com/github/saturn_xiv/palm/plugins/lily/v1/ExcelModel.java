// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lily.proto

package com.github.saturn_xiv.palm.plugins.lily.v1;

/**
 * Protobuf type {@code palm.lily.v1.ExcelModel}
 */
public final class ExcelModel extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:palm.lily.v1.ExcelModel)
    ExcelModelOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExcelModel.newBuilder() to construct.
  private ExcelModel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExcelModel() {
    sheets_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExcelModel();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.class, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Builder.class);
  }

  public interface SheetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:palm.lily.v1.ExcelModel.Sheet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
     */
    java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell> 
        getCellsList();
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
     */
    com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell getCells(int index);
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
     */
    int getCellsCount();
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
     */
    java.util.List<? extends com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.CellOrBuilder> 
        getCellsOrBuilderList();
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
     */
    com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.CellOrBuilder getCellsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code palm.lily.v1.ExcelModel.Sheet}
   */
  public static final class Sheet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:palm.lily.v1.ExcelModel.Sheet)
      SheetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Sheet.newBuilder() to construct.
    private Sheet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sheet() {
      name_ = "";
      cells_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Sheet();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_Sheet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_Sheet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.class, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder.class);
    }

    public interface CellOrBuilder extends
        // @@protoc_insertion_point(interface_extends:palm.lily.v1.ExcelModel.Sheet.Cell)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint32 row = 1;</code>
       * @return The row.
       */
      int getRow();

      /**
       * <code>uint32 col = 2;</code>
       * @return The col.
       */
      int getCol();

      /**
       * <code>string val = 3;</code>
       * @return The val.
       */
      java.lang.String getVal();
      /**
       * <code>string val = 3;</code>
       * @return The bytes for val.
       */
      com.google.protobuf.ByteString
          getValBytes();
    }
    /**
     * Protobuf type {@code palm.lily.v1.ExcelModel.Sheet.Cell}
     */
    public static final class Cell extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:palm.lily.v1.ExcelModel.Sheet.Cell)
        CellOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Cell.newBuilder() to construct.
      private Cell(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Cell() {
        val_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Cell();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_Sheet_Cell_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_Sheet_Cell_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.class, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder.class);
      }

      public static final int ROW_FIELD_NUMBER = 1;
      private int row_ = 0;
      /**
       * <code>uint32 row = 1;</code>
       * @return The row.
       */
      @java.lang.Override
      public int getRow() {
        return row_;
      }

      public static final int COL_FIELD_NUMBER = 2;
      private int col_ = 0;
      /**
       * <code>uint32 col = 2;</code>
       * @return The col.
       */
      @java.lang.Override
      public int getCol() {
        return col_;
      }

      public static final int VAL_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private volatile java.lang.Object val_ = "";
      /**
       * <code>string val = 3;</code>
       * @return The val.
       */
      @java.lang.Override
      public java.lang.String getVal() {
        java.lang.Object ref = val_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          val_ = s;
          return s;
        }
      }
      /**
       * <code>string val = 3;</code>
       * @return The bytes for val.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValBytes() {
        java.lang.Object ref = val_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          val_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (row_ != 0) {
          output.writeUInt32(1, row_);
        }
        if (col_ != 0) {
          output.writeUInt32(2, col_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(val_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, val_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (row_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, row_);
        }
        if (col_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, col_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(val_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, val_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell)) {
          return super.equals(obj);
        }
        com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell other = (com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell) obj;

        if (getRow()
            != other.getRow()) return false;
        if (getCol()
            != other.getCol()) return false;
        if (!getVal()
            .equals(other.getVal())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRow();
        hash = (37 * hash) + COL_FIELD_NUMBER;
        hash = (53 * hash) + getCol();
        hash = (37 * hash) + VAL_FIELD_NUMBER;
        hash = (53 * hash) + getVal().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code palm.lily.v1.ExcelModel.Sheet.Cell}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:palm.lily.v1.ExcelModel.Sheet.Cell)
          com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.CellOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_Sheet_Cell_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_Sheet_Cell_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.class, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder.class);
        }

        // Construct using com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          row_ = 0;
          col_ = 0;
          val_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_Sheet_Cell_descriptor;
        }

        @java.lang.Override
        public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell getDefaultInstanceForType() {
          return com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.getDefaultInstance();
        }

        @java.lang.Override
        public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell build() {
          com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell buildPartial() {
          com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell result = new com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.row_ = row_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.col_ = col_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.val_ = val_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell) {
            return mergeFrom((com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell other) {
          if (other == com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.getDefaultInstance()) return this;
          if (other.getRow() != 0) {
            setRow(other.getRow());
          }
          if (other.getCol() != 0) {
            setCol(other.getCol());
          }
          if (!other.getVal().isEmpty()) {
            val_ = other.val_;
            bitField0_ |= 0x00000004;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  row_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  col_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 26: {
                  val_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int row_ ;
        /**
         * <code>uint32 row = 1;</code>
         * @return The row.
         */
        @java.lang.Override
        public int getRow() {
          return row_;
        }
        /**
         * <code>uint32 row = 1;</code>
         * @param value The row to set.
         * @return This builder for chaining.
         */
        public Builder setRow(int value) {

          row_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 row = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearRow() {
          bitField0_ = (bitField0_ & ~0x00000001);
          row_ = 0;
          onChanged();
          return this;
        }

        private int col_ ;
        /**
         * <code>uint32 col = 2;</code>
         * @return The col.
         */
        @java.lang.Override
        public int getCol() {
          return col_;
        }
        /**
         * <code>uint32 col = 2;</code>
         * @param value The col to set.
         * @return This builder for chaining.
         */
        public Builder setCol(int value) {

          col_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 col = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearCol() {
          bitField0_ = (bitField0_ & ~0x00000002);
          col_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object val_ = "";
        /**
         * <code>string val = 3;</code>
         * @return The val.
         */
        public java.lang.String getVal() {
          java.lang.Object ref = val_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            val_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string val = 3;</code>
         * @return The bytes for val.
         */
        public com.google.protobuf.ByteString
            getValBytes() {
          java.lang.Object ref = val_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            val_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string val = 3;</code>
         * @param value The val to set.
         * @return This builder for chaining.
         */
        public Builder setVal(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          val_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>string val = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearVal() {
          val_ = getDefaultInstance().getVal();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>string val = 3;</code>
         * @param value The bytes for val to set.
         * @return This builder for chaining.
         */
        public Builder setValBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          val_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:palm.lily.v1.ExcelModel.Sheet.Cell)
      }

      // @@protoc_insertion_point(class_scope:palm.lily.v1.ExcelModel.Sheet.Cell)
      private static final com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell();
      }

      public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Cell>
          PARSER = new com.google.protobuf.AbstractParser<Cell>() {
        @java.lang.Override
        public Cell parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Cell> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Cell> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CELLS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell> cells_;
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell> getCellsList() {
      return cells_;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.CellOrBuilder> 
        getCellsOrBuilderList() {
      return cells_;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
     */
    @java.lang.Override
    public int getCellsCount() {
      return cells_.size();
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
     */
    @java.lang.Override
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell getCells(int index) {
      return cells_.get(index);
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
     */
    @java.lang.Override
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.CellOrBuilder getCellsOrBuilder(
        int index) {
      return cells_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      for (int i = 0; i < cells_.size(); i++) {
        output.writeMessage(2, cells_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (int i = 0; i < cells_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, cells_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet)) {
        return super.equals(obj);
      }
      com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet other = (com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getCellsList()
          .equals(other.getCellsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getCellsCount() > 0) {
        hash = (37 * hash) + CELLS_FIELD_NUMBER;
        hash = (53 * hash) + getCellsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code palm.lily.v1.ExcelModel.Sheet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:palm.lily.v1.ExcelModel.Sheet)
        com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.SheetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_Sheet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_Sheet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.class, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder.class);
      }

      // Construct using com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        if (cellsBuilder_ == null) {
          cells_ = java.util.Collections.emptyList();
        } else {
          cells_ = null;
          cellsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_Sheet_descriptor;
      }

      @java.lang.Override
      public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet getDefaultInstanceForType() {
        return com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet build() {
        com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet buildPartial() {
        com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet result = new com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet result) {
        if (cellsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            cells_ = java.util.Collections.unmodifiableList(cells_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.cells_ = cells_;
        } else {
          result.cells_ = cellsBuilder_.build();
        }
      }

      private void buildPartial0(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet) {
          return mergeFrom((com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet other) {
        if (other == com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (cellsBuilder_ == null) {
          if (!other.cells_.isEmpty()) {
            if (cells_.isEmpty()) {
              cells_ = other.cells_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCellsIsMutable();
              cells_.addAll(other.cells_);
            }
            onChanged();
          }
        } else {
          if (!other.cells_.isEmpty()) {
            if (cellsBuilder_.isEmpty()) {
              cellsBuilder_.dispose();
              cellsBuilder_ = null;
              cells_ = other.cells_;
              bitField0_ = (bitField0_ & ~0x00000002);
              cellsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCellsFieldBuilder() : null;
            } else {
              cellsBuilder_.addAllMessages(other.cells_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell m =
                    input.readMessage(
                        com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.parser(),
                        extensionRegistry);
                if (cellsBuilder_ == null) {
                  ensureCellsIsMutable();
                  cells_.add(m);
                } else {
                  cellsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell> cells_ =
        java.util.Collections.emptyList();
      private void ensureCellsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          cells_ = new java.util.ArrayList<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell>(cells_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.CellOrBuilder> cellsBuilder_;

      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell> getCellsList() {
        if (cellsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cells_);
        } else {
          return cellsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public int getCellsCount() {
        if (cellsBuilder_ == null) {
          return cells_.size();
        } else {
          return cellsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell getCells(int index) {
        if (cellsBuilder_ == null) {
          return cells_.get(index);
        } else {
          return cellsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public Builder setCells(
          int index, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell value) {
        if (cellsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellsIsMutable();
          cells_.set(index, value);
          onChanged();
        } else {
          cellsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public Builder setCells(
          int index, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder builderForValue) {
        if (cellsBuilder_ == null) {
          ensureCellsIsMutable();
          cells_.set(index, builderForValue.build());
          onChanged();
        } else {
          cellsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public Builder addCells(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell value) {
        if (cellsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellsIsMutable();
          cells_.add(value);
          onChanged();
        } else {
          cellsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public Builder addCells(
          int index, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell value) {
        if (cellsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellsIsMutable();
          cells_.add(index, value);
          onChanged();
        } else {
          cellsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public Builder addCells(
          com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder builderForValue) {
        if (cellsBuilder_ == null) {
          ensureCellsIsMutable();
          cells_.add(builderForValue.build());
          onChanged();
        } else {
          cellsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public Builder addCells(
          int index, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder builderForValue) {
        if (cellsBuilder_ == null) {
          ensureCellsIsMutable();
          cells_.add(index, builderForValue.build());
          onChanged();
        } else {
          cellsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public Builder addAllCells(
          java.lang.Iterable<? extends com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell> values) {
        if (cellsBuilder_ == null) {
          ensureCellsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cells_);
          onChanged();
        } else {
          cellsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public Builder clearCells() {
        if (cellsBuilder_ == null) {
          cells_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          cellsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public Builder removeCells(int index) {
        if (cellsBuilder_ == null) {
          ensureCellsIsMutable();
          cells_.remove(index);
          onChanged();
        } else {
          cellsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder getCellsBuilder(
          int index) {
        return getCellsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.CellOrBuilder getCellsOrBuilder(
          int index) {
        if (cellsBuilder_ == null) {
          return cells_.get(index);  } else {
          return cellsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public java.util.List<? extends com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.CellOrBuilder> 
           getCellsOrBuilderList() {
        if (cellsBuilder_ != null) {
          return cellsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cells_);
        }
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder addCellsBuilder() {
        return getCellsFieldBuilder().addBuilder(
            com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.getDefaultInstance());
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder addCellsBuilder(
          int index) {
        return getCellsFieldBuilder().addBuilder(
            index, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.getDefaultInstance());
      }
      /**
       * <code>repeated .palm.lily.v1.ExcelModel.Sheet.Cell cells = 2;</code>
       */
      public java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder> 
           getCellsBuilderList() {
        return getCellsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.CellOrBuilder> 
          getCellsFieldBuilder() {
        if (cellsBuilder_ == null) {
          cellsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Cell.Builder, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.CellOrBuilder>(
                  cells_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          cells_ = null;
        }
        return cellsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:palm.lily.v1.ExcelModel.Sheet)
    }

    // @@protoc_insertion_point(class_scope:palm.lily.v1.ExcelModel.Sheet)
    private static final com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet();
    }

    public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Sheet>
        PARSER = new com.google.protobuf.AbstractParser<Sheet>() {
      @java.lang.Override
      public Sheet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Sheet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sheet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int SHEETS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet> sheets_;
  /**
   * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet> getSheetsList() {
    return sheets_;
  }
  /**
   * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.SheetOrBuilder> 
      getSheetsOrBuilderList() {
    return sheets_;
  }
  /**
   * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
   */
  @java.lang.Override
  public int getSheetsCount() {
    return sheets_.size();
  }
  /**
   * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
   */
  @java.lang.Override
  public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet getSheets(int index) {
    return sheets_.get(index);
  }
  /**
   * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
   */
  @java.lang.Override
  public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.SheetOrBuilder getSheetsOrBuilder(
      int index) {
    return sheets_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < sheets_.size(); i++) {
      output.writeMessage(1, sheets_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < sheets_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, sheets_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel)) {
      return super.equals(obj);
    }
    com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel other = (com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel) obj;

    if (!getSheetsList()
        .equals(other.getSheetsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getSheetsCount() > 0) {
      hash = (37 * hash) + SHEETS_FIELD_NUMBER;
      hash = (53 * hash) + getSheetsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code palm.lily.v1.ExcelModel}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:palm.lily.v1.ExcelModel)
      com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModelOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.class, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Builder.class);
    }

    // Construct using com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (sheetsBuilder_ == null) {
        sheets_ = java.util.Collections.emptyList();
      } else {
        sheets_ = null;
        sheetsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.saturn_xiv.palm.plugins.lily.v1.Lily.internal_static_palm_lily_v1_ExcelModel_descriptor;
    }

    @java.lang.Override
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel getDefaultInstanceForType() {
      return com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel build() {
      com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel buildPartial() {
      com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel result = new com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel result) {
      if (sheetsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          sheets_ = java.util.Collections.unmodifiableList(sheets_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.sheets_ = sheets_;
      } else {
        result.sheets_ = sheetsBuilder_.build();
      }
    }

    private void buildPartial0(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel) {
        return mergeFrom((com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel other) {
      if (other == com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.getDefaultInstance()) return this;
      if (sheetsBuilder_ == null) {
        if (!other.sheets_.isEmpty()) {
          if (sheets_.isEmpty()) {
            sheets_ = other.sheets_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSheetsIsMutable();
            sheets_.addAll(other.sheets_);
          }
          onChanged();
        }
      } else {
        if (!other.sheets_.isEmpty()) {
          if (sheetsBuilder_.isEmpty()) {
            sheetsBuilder_.dispose();
            sheetsBuilder_ = null;
            sheets_ = other.sheets_;
            bitField0_ = (bitField0_ & ~0x00000001);
            sheetsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSheetsFieldBuilder() : null;
          } else {
            sheetsBuilder_.addAllMessages(other.sheets_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet m =
                  input.readMessage(
                      com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.parser(),
                      extensionRegistry);
              if (sheetsBuilder_ == null) {
                ensureSheetsIsMutable();
                sheets_.add(m);
              } else {
                sheetsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet> sheets_ =
      java.util.Collections.emptyList();
    private void ensureSheetsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        sheets_ = new java.util.ArrayList<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet>(sheets_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.SheetOrBuilder> sheetsBuilder_;

    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet> getSheetsList() {
      if (sheetsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sheets_);
      } else {
        return sheetsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public int getSheetsCount() {
      if (sheetsBuilder_ == null) {
        return sheets_.size();
      } else {
        return sheetsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet getSheets(int index) {
      if (sheetsBuilder_ == null) {
        return sheets_.get(index);
      } else {
        return sheetsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public Builder setSheets(
        int index, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet value) {
      if (sheetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSheetsIsMutable();
        sheets_.set(index, value);
        onChanged();
      } else {
        sheetsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public Builder setSheets(
        int index, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder builderForValue) {
      if (sheetsBuilder_ == null) {
        ensureSheetsIsMutable();
        sheets_.set(index, builderForValue.build());
        onChanged();
      } else {
        sheetsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public Builder addSheets(com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet value) {
      if (sheetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSheetsIsMutable();
        sheets_.add(value);
        onChanged();
      } else {
        sheetsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public Builder addSheets(
        int index, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet value) {
      if (sheetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSheetsIsMutable();
        sheets_.add(index, value);
        onChanged();
      } else {
        sheetsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public Builder addSheets(
        com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder builderForValue) {
      if (sheetsBuilder_ == null) {
        ensureSheetsIsMutable();
        sheets_.add(builderForValue.build());
        onChanged();
      } else {
        sheetsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public Builder addSheets(
        int index, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder builderForValue) {
      if (sheetsBuilder_ == null) {
        ensureSheetsIsMutable();
        sheets_.add(index, builderForValue.build());
        onChanged();
      } else {
        sheetsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public Builder addAllSheets(
        java.lang.Iterable<? extends com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet> values) {
      if (sheetsBuilder_ == null) {
        ensureSheetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sheets_);
        onChanged();
      } else {
        sheetsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public Builder clearSheets() {
      if (sheetsBuilder_ == null) {
        sheets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        sheetsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public Builder removeSheets(int index) {
      if (sheetsBuilder_ == null) {
        ensureSheetsIsMutable();
        sheets_.remove(index);
        onChanged();
      } else {
        sheetsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder getSheetsBuilder(
        int index) {
      return getSheetsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.SheetOrBuilder getSheetsOrBuilder(
        int index) {
      if (sheetsBuilder_ == null) {
        return sheets_.get(index);  } else {
        return sheetsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public java.util.List<? extends com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.SheetOrBuilder> 
         getSheetsOrBuilderList() {
      if (sheetsBuilder_ != null) {
        return sheetsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sheets_);
      }
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder addSheetsBuilder() {
      return getSheetsFieldBuilder().addBuilder(
          com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.getDefaultInstance());
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder addSheetsBuilder(
        int index) {
      return getSheetsFieldBuilder().addBuilder(
          index, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.getDefaultInstance());
    }
    /**
     * <code>repeated .palm.lily.v1.ExcelModel.Sheet sheets = 1;</code>
     */
    public java.util.List<com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder> 
         getSheetsBuilderList() {
      return getSheetsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.SheetOrBuilder> 
        getSheetsFieldBuilder() {
      if (sheetsBuilder_ == null) {
        sheetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.Sheet.Builder, com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel.SheetOrBuilder>(
                sheets_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        sheets_ = null;
      }
      return sheetsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:palm.lily.v1.ExcelModel)
  }

  // @@protoc_insertion_point(class_scope:palm.lily.v1.ExcelModel)
  private static final com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel();
  }

  public static com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExcelModel>
      PARSER = new com.google.protobuf.AbstractParser<ExcelModel>() {
    @java.lang.Override
    public ExcelModel parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ExcelModel> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExcelModel> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.saturn_xiv.palm.plugins.lily.v1.ExcelModel getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

